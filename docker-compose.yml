x-restart-policy: &restart-policy
  restart: ${RESTART_POLICY:-unless-stopped}

x-defaults: &defaults
  user: ${UID}:${GID}

x-env-defaults: &env-defaults
  http_proxy: ${HTTP_PROXY:-}
  https_proxy: ${HTTPS_PROXY:-}

x-geonature-depends-on-defaults: &geonature-depends-on-defaults
  redis:
    condition: service_healthy

x-geonature-backend-env: &geonature-backend-env
  <<: *env-defaults
  GEONATURE_SQLALCHEMY_DATABASE_URI: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT:-5432}/${POSTGRES_DB}
  GEONATURE_URL_APPLICATION: ${GEONATURE_FRONTEND_PROTOCOL}://${GEONATURE_FRONTEND_HOSTPORT}${GEONATURE_FRONTEND_PREFIX}
  GEONATURE_API_ENDPOINT: ${GEONATURE_BACKEND_PROTOCOL}://${GEONATURE_BACKEND_HOSTPORT}${GEONATURE_BACKEND_PREFIX}
  GEONATURE_API_TAXHUB: ${TAXHUB_PROTOCOL}://${TAXHUB_HOSTPORT}${TAXHUB_API_PREFIX}
  GEONATURE_CONFIG_FILE: ${GEONATURE_CONFIG_FILE:-/dist/config/geonature_config.toml}
  GEONATURE_CELERY__broker_url: ${GEONATURE_CELERY__broker_url:-redis://redis}
  GEONATURE_CELERY__result_backend: ${GEONATURE_CELERY__result_backend:-redis://redis}

x-geonature-backend-defaults: &geonature-backend-defaults
  <<: *defaults
    # image: ${GEONATURE_BACKEND_EXTRA_IMAGE}
  build: ./
  depends_on:
    <<: *geonature-depends-on-defaults
  volumes:
    - ./config/geonature:/dist/config
    - ./data/geonature/media:${GEONATURE_MEDIA_FOLDER:-/dist/media}
    - ./data/geonature/custom:${GEONATURE_CUSTOM_STATIC_FOLDER:-/dist/custom}
    - ./sources:/sources
    - ./logs:/dist/logs
  environment:
    <<: *geonature-backend-env

services:
  redis:
    <<: *restart-policy
    image: ${REDIS_IMAGE:-redis:7-alpine}
    container_name: ${STACK_NAME:-geonature}_redis
    volumes:
      - redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      _net_geonature:


  usershub:
    <<: [*restart-policy, *defaults]
    image: ${USERSHUB_IMAGE}
    container_name: ${STACK_NAME:-geonature}_usershub
    depends_on:
      geonature-install-db:
        condition: service_completed_successfully
    volumes:
      - ./config/usershub:/dist/config/
    environment:
      <<: *env-defaults
      USERSHUB_URL_APPLICATION: "${USERSHUB_PROTOCOL}://${USERSHUB_HOSTPORT}${USERSHUB_PREFIX}"
      USERSHUB_SQLALCHEMY_DATABASE_URI: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT:-5432}/${POSTGRES_DB}
      USERSHUB_SETTINGS: ${USERSHUB_SETTINGS:-/dist/config/config.py}
      USERSHUB_ACTIVATE_APP: ${USERSHUB_ACTIVATE_APP:-true}
      USERSHUB_ACTIVATE_API: ${USERSHUB_ACTIVATE_API:-true}
      USERSHUB_COOKIE_EXPIRATION: ${USERSHUB_COOKIE_EXPIRATION:-3600}
      USERSHUB_FILL_MD5_PASS: ${USERSHUB_FILL_MD5_PASS:-false}
      VIRTUAL_HOST: ${USERSHUB_HOST}
      LETSENCRYPT_HOST: ${USERSHUB_HOST}
      VIRTUAL_PATH: ${USERSHUB_PREFIX}
    networks:
      proxy:
      _net_geonature:



  taxhub:
    <<: [*restart-policy, *defaults]
    image: ${TAXHUB_IMAGE}
    container_name: ${STACK_NAME:-geonature}_taxhub
    depends_on:
      geonature-install-db:
        condition: service_completed_successfully
    volumes:
      - ./config/taxhub:/dist/config
      - ./data/taxhub/medias:${TAXHUB_STATIC_FOLDER:-/dist/static}/medias
    environment:
      <<: *env-defaults
      TAXHUB_APPLICATION_ROOT: "${TAXHUB_PREFIX}"
      TAXHUB_SQLALCHEMY_DATABASE_URI: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT:-5432}/${POSTGRES_DB}
      TAXHUB_SETTINGS: ${TAXHUB_SETTINGS:-/dist/config/config.py}
      TAXHUB_UPLOAD_FOLDER: "medias"
      TAXHUB_SQLALCHEMY_TRACK_MODIFICATIONS: False
      TAXHUB_COOKIE_EXPIRATION: 3600
      TAXHUB_PASS_METHOD: "hash"
      VIRTUAL_HOST: ${TAXHUB_HOST}
      LETSENCRYPT_HOST: ${TAXHUB_HOST}
      VIRTUAL_PATH: ${TAXHUB_PREFIX}
    networks:
      proxy:
      _net_geonature:



  geonature-install-db:
    <<: *geonature-backend-defaults
      #command: "geonature permissions supergrant --yes ${GEONATURE_SUPERGRANT_ARGS:---help}"
    container_name: ${STACK_NAME:-geonature}_geonature_install_db
    entrypoint: ["bash","-c","echo 'ok'"]
    environment:
      <<: *geonature-backend-env
      srid_local: ${GEONATURE_DB_LOCAL_SRID}
      add_sample_data: ${GEONATURE_DB_ADD_SAMPLE_DATA:-false}
      install_bdc_statuts: ${GEONATURE_DB_INSTALL_BDC_STATUTS:-true}
      install_sig_layers: ${GEONATURE_DB_INSTALL_SIG_LAYERS:-true}
      install_grid_layer: ${GEONATURE_DB_INSTALL_GRID_LAYER:-true}
      install_ref_sensitivity: ${GEONATURE_DB_INSTALL_REF_SENSITIVITY:-true}
      usershub: ${GEONATURE_DB_INSTALL_USERSHUB:-true}
      usershub_samples: ${GEONATURE_DB_INSTALL_USERSHUB_SAMPLES:-true}
      taxhub: ${GEONATURE_DB_INSTALL_TAXHUB:-true}
      taxhub_samples: ${GEONATURE_DB_INSTALL_TAXHUB_SAMPLES:-true}
    networks:
      _net_geonature:


  geonature-worker:
    <<: [*restart-policy, *geonature-backend-defaults]
    container_name: ${STACK_NAME:-geonature}_geonature_worker
    depends_on:
      <<: *geonature-depends-on-defaults
      geonature-install-db:
        condition: service_completed_successfully
    entrypoint: []
    command: celery -A geonature.celery_app:app worker --beat --schedule-filename=/dist/media/celerybeat-schedule.db
    networks:
      _net_geonature:


  geonature-backend:
    <<: [*restart-policy, *geonature-backend-defaults]
    container_name: ${STACK_NAME:-geonature}_geonature_backend
    depends_on:
      <<: *geonature-depends-on-defaults
      geonature-install-db:
        condition: service_completed_successfully
    entrypoint: []
    command:
      - "gunicorn"
      - "geonature:create_app()"
      - "--name=geonature"
      - "--workers=${GEONATURE_BACKEND_WORKERS:-2}"
      - "--threads=${GEONATURE_BACKEND_THREADS:-2}"
      - "--timeout=${GEONATURE_BACKEND_TIMEOUT:-30}"
      - "--access-logfile=${GEONATURE_BACKEND_ACCESS_LOGFILE:-/dist/logs/backend-access.log}"
      - "--error-logfile=${GEONATURE_BACKEND_ERROR_LOGFILE:-/dist/logs/backend-error.log}"
      - "--bind=0.0.0.0:8000"
      - "--reload"
      - "--reload-extra-file=${GEONATURE_CONFIG_FILE:-/dist/config/geonature_config.toml}"
    environment:
      <<: *geonature-backend-env
      VIRTUAL_HOST: ${GEONATURE_BACKEND_HOST}
      VIRTUAL_MAX_UPLOAD: 100m
      LETSENCRYPT_HOST: ${GEONATURE_BACKEND_HOST}
      VIRTUAL_PATH: ${GEONATURE_BACKEND_PREFIX}
    networks:
      proxy:
      _net_geonature:



  geonature-frontend:
    <<: *restart-policy
    image: ${GEONATURE_FRONTEND_EXTRA_IMAGE}
    container_name: ${STACK_NAME:-geonature}_geonature_frontend
    environment:
      - NGINX_LOCATION=${GEONATURE_FRONTEND_PREFIX}
      - API_ENDPOINT="${GEONATURE_BACKEND_PROTOCOL}://${GEONATURE_BACKEND_HOSTPORT}${GEONATURE_BACKEND_PREFIX}"
      - VIRTUAL_HOST=${GEONATURE_FRONTEND_HOST}
      - LETSENCRYPT_HOST=${GEONATURE_FRONTEND_HOST}
      - VIRTUAL_PATH=${GEONATURE_FRONTEND_PREFIX}
    networks:
      proxy:
      _net_geonature:


volumes:
  redis:

networks:
  proxy:
    name: proxy
    external: true
  _net_geonature:
